// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using recordetur_api.Context;

#nullable disable

namespace recordetur_api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240110201916_refactoring_Sqlserver")]
    partial class refactoring_Sqlserver
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("recordetur_api.Models.Clientes", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"), 1L, 1);

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("recordetur_api.Models.Reservas", b =>
                {
                    b.Property<int>("ReservaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservaId"), 1L, 1);

                    b.Property<string>("ClienteId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClientesClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Valor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViagemId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ViagensViagemId")
                        .HasColumnType("int");

                    b.HasKey("ReservaId");

                    b.HasIndex("ClientesClienteId");

                    b.HasIndex("ViagensViagemId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("recordetur_api.Models.Viagens", b =>
                {
                    b.Property<int>("ViagemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ViagemId"), 1L, 1);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Preco")
                        .HasColumnType("float");

                    b.HasKey("ViagemId");

                    b.ToTable("Viagens");
                });

            modelBuilder.Entity("recordetur_api.Models.Reservas", b =>
                {
                    b.HasOne("recordetur_api.Models.Clientes", "Clientes")
                        .WithMany("Reservas")
                        .HasForeignKey("ClientesClienteId");

                    b.HasOne("recordetur_api.Models.Viagens", "Viagens")
                        .WithMany("Reservas")
                        .HasForeignKey("ViagensViagemId");

                    b.Navigation("Clientes");

                    b.Navigation("Viagens");
                });

            modelBuilder.Entity("recordetur_api.Models.Clientes", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("recordetur_api.Models.Viagens", b =>
                {
                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
